spring.h2.console.enabled=true

#turn on statistics
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug

#show all queries
spring.jpa.show-sql=true
#see set parameters
logging.level.org.hibernate.type=trace

#auto create schema and init data. spring searches for schema.sql and data.sql

#update = do not create if it already exists
#create = always create new table. drop it first if it exists
spring.jpa.hibernate.ddl-auto=update


#2nd level cache config
#1. enable cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
#2. specify caching framework like Eh Cache
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.internal.EhcacheRegionFactory
#3. only cache what i tell to cache..enable that i can select by myself. see SharedCacheMode class for more options
#important: you only want to cache in 2nd lvl cache, data which is not changed, like country codes
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECT
logging.level.net.sf.ehcache=debug
#4. what data to cache? e.g. cache course details across multiple transactions because they never change. to do this add @Cacheable on Course.class
